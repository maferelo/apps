x-app: &default-app
  build:
    context: "."
    target: "app"
  depends_on:
    - "postgres"
  env_file:
    - ".env"
  init: true
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "${DOCKER_WEB_VOLUME:-./public:/app/public}"

services:
  postgres:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    env_file:
      - ".env"
    image: "${DB_IMAGE:postgres:-14.4-bullseye}"
    init: true
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - postgres:/var/lib/postgresql/data/

  web:
    <<: *default-app
    build:
      args:
        IMAGE: "${WEB_IMAGE:-tiangolo/uvicorn-gunicorn-fastapi:python3.8}"
        STAGING_VARIANT: "${WEB_IMAGE_STAGING_VARIANT:-}"
        VARIANT: "${WEB_IMAGE_VARIANT:-slim}"
    command: uvicorn app.main:app --host 0.0.0.0
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:8000"

volumes:
  postgres: {}