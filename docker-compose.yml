---
x-app:
  &default-app
  build:
    context: "."
    target: "app"
  depends_on:
    postgres:
      condition: service_healthy
  env_file:
    - ".env"
  init: true
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true

services:
  pgadmin:
    depends_on:
      - "postgres"
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_DEFAULT_EMAIL: "admin@app.com"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2022!"
    image: "dpage/pgadmin4"
    init: true
    ports:
      - "5050:80"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - "pgadmin:/var/lib/pgadmin"

  postgres:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    env_file:
      - ".env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: "${DB_IMAGE:-postgres:14.4-bullseye}"
    init: true
    ports:
      - "5432:5432"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"

  web:
    <<: *default-app
    build:
      args:
        IMAGE: "${WEB_IMAGE:-tiangolo/uvicorn-gunicorn-fastapi:python3.8}"
        STAGING_VARIANT: "${WEB_IMAGE_STAGING_VARIANT:-}"
        VARIANT: "${WEB_IMAGE_VARIANT:--slim}"
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:8000"
    healthcheck:
      interval: "10s"
      retries: 3
      start_period: "10s"
      test:
        "${DOCKER_WEB_HEALTHCHECK_TEST:-curl
        --fail http://localhost:8000 || exit 1}"
      timeout: "10s"
    volumes:
      - "${DOCKER_WEB_VOLUME:-.:/app}"

volumes:
  pgadmin: {}
  postgres: {}
